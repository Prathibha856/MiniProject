{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"ItemSeparatorComponent\", \"SectionSeparatorComponent\", \"renderItem\", \"renderSectionFooter\", \"renderSectionHeader\", \"sections\", \"stickySectionHeadersEnabled\"];\nvar _jsxFileName = \"F:\\\\MiniProject\\\\node_modules\\\\@react-native\\\\virtualized-lists\\\\Lists\\\\VirtualizedSectionList.js\";\nimport VirtualizedList from './VirtualizedList';\nimport { keyExtractor as defaultKeyExtractor } from './VirtualizeUtils';\nimport invariant from 'invariant';\nimport * as React from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass VirtualizedSectionList extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this._keyExtractor = (item, index) => {\n      const info = this._subExtractor(index);\n      return info && info.key || String(index);\n    };\n    this._convertViewable = viewable => {\n      invariant(viewable.index != null, 'Received a broken ViewToken');\n      const info = this._subExtractor(viewable.index);\n      if (!info) {\n        return null;\n      }\n      const keyExtractorWithNullableIndex = info.section.keyExtractor;\n      const keyExtractorWithNonNullableIndex = this.props.keyExtractor || defaultKeyExtractor;\n      const key = keyExtractorWithNullableIndex != null ? keyExtractorWithNullableIndex(viewable.item, info.index) : keyExtractorWithNonNullableIndex(viewable.item, info.index ?? 0);\n      return Object.assign({}, viewable, {\n        index: info.index,\n        key,\n        section: info.section\n      });\n    };\n    this._onViewableItemsChanged = ({\n      viewableItems,\n      changed\n    }) => {\n      const onViewableItemsChanged = this.props.onViewableItemsChanged;\n      if (onViewableItemsChanged != null) {\n        onViewableItemsChanged({\n          viewableItems: viewableItems.map(this._convertViewable, this).filter(Boolean),\n          changed: changed.map(this._convertViewable, this).filter(Boolean)\n        });\n      }\n    };\n    this._renderItem = listItemCount => ({\n      item,\n      index\n    }) => {\n      const info = this._subExtractor(index);\n      if (!info) {\n        return null;\n      }\n      const infoIndex = info.index;\n      if (infoIndex == null) {\n        const {\n          section\n        } = info;\n        if (info.header === true) {\n          const {\n            renderSectionHeader\n          } = this.props;\n          return renderSectionHeader ? renderSectionHeader({\n            section\n          }) : null;\n        } else {\n          const {\n            renderSectionFooter\n          } = this.props;\n          return renderSectionFooter ? renderSectionFooter({\n            section\n          }) : null;\n        }\n      } else {\n        const renderItem = info.section.renderItem || this.props.renderItem;\n        const SeparatorComponent = this._getSeparatorComponent(index, info, listItemCount);\n        invariant(renderItem, 'no renderItem!');\n        return _jsxDEV(ItemWithSeparator, {\n          SeparatorComponent: SeparatorComponent,\n          LeadingSeparatorComponent: infoIndex === 0 ? this.props.SectionSeparatorComponent : undefined,\n          cellKey: info.key,\n          index: infoIndex,\n          item: item,\n          leadingItem: info.leadingItem,\n          leadingSection: info.leadingSection,\n          prevCellKey: (this._subExtractor(index - 1) || {}).key,\n          setSelfHighlightCallback: this._setUpdateHighlightFor,\n          setSelfUpdatePropsCallback: this._setUpdatePropsFor,\n          updateHighlightFor: this._updateHighlightFor,\n          updatePropsFor: this._updatePropsFor,\n          renderItem: renderItem,\n          section: info.section,\n          trailingItem: info.trailingItem,\n          trailingSection: info.trailingSection,\n          inverted: !!this.props.inverted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this);\n      }\n    };\n    this._updatePropsFor = (cellKey, value) => {\n      const updateProps = this._updatePropsMap[cellKey];\n      if (updateProps != null) {\n        updateProps(value);\n      }\n    };\n    this._updateHighlightFor = (cellKey, value) => {\n      const updateHighlight = this._updateHighlightMap[cellKey];\n      if (updateHighlight != null) {\n        updateHighlight(value);\n      }\n    };\n    this._setUpdateHighlightFor = (cellKey, updateHighlightFn) => {\n      if (updateHighlightFn != null) {\n        this._updateHighlightMap[cellKey] = updateHighlightFn;\n      } else {\n        delete this._updateHighlightFor[cellKey];\n      }\n    };\n    this._setUpdatePropsFor = (cellKey, updatePropsFn) => {\n      if (updatePropsFn != null) {\n        this._updatePropsMap[cellKey] = updatePropsFn;\n      } else {\n        delete this._updatePropsMap[cellKey];\n      }\n    };\n    this._updateHighlightMap = {};\n    this._updatePropsMap = {};\n    this._listRef = void 0;\n    this._captureRef = ref => {\n      this._listRef = ref;\n    };\n  }\n  scrollToLocation(params) {\n    let index = params.itemIndex;\n    for (let i = 0; i < params.sectionIndex; i++) {\n      index += this.props.getItemCount(this.props.sections[i].data) + 2;\n    }\n    let viewOffset = params.viewOffset || 0;\n    if (this._listRef == null) {\n      return;\n    }\n    const listRef = this._listRef;\n    if (params.itemIndex > 0 && this.props.stickySectionHeadersEnabled) {\n      const frame = listRef.__getListMetrics().getCellMetricsApprox(index - params.itemIndex, listRef.props);\n      viewOffset += frame.length;\n    }\n    const toIndexParams = Object.assign({}, params, {\n      viewOffset,\n      index\n    });\n    this._listRef.scrollToIndex(toIndexParams);\n  }\n  getListRef() {\n    return this._listRef;\n  }\n  render() {\n    const _this$props = this.props,\n      passThroughProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n    const listHeaderOffset = this.props.ListHeaderComponent ? 1 : 0;\n    const stickyHeaderIndices = this.props.stickySectionHeadersEnabled ? [] : undefined;\n    let itemCount = 0;\n    for (const section of this.props.sections) {\n      if (stickyHeaderIndices != null) {\n        stickyHeaderIndices.push(itemCount + listHeaderOffset);\n      }\n      itemCount += 2;\n      itemCount += this.props.getItemCount(section.data);\n    }\n    const renderItem = this._renderItem(itemCount);\n    return _jsxDEV(VirtualizedList, Object.assign({}, passThroughProps, {\n      keyExtractor: this._keyExtractor,\n      stickyHeaderIndices: stickyHeaderIndices,\n      renderItem: renderItem,\n      data: this.props.sections,\n      getItem: (sections, index) => this._getItem(this.props, sections, index),\n      getItemCount: () => itemCount,\n      onViewableItemsChanged: this.props.onViewableItemsChanged ? this._onViewableItemsChanged : undefined,\n      ref: this._captureRef\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this);\n  }\n  _getItem(props, sections, index) {\n    if (!sections) {\n      return null;\n    }\n    let itemIdx = index - 1;\n    for (let i = 0; i < sections.length; i++) {\n      const section = sections[i];\n      const sectionData = section.data;\n      const itemCount = props.getItemCount(sectionData);\n      if (itemIdx === -1 || itemIdx === itemCount) {\n        return section;\n      } else if (itemIdx < itemCount) {\n        return props.getItem(sectionData, itemIdx);\n      } else {\n        itemIdx -= itemCount + 2;\n      }\n    }\n    return null;\n  }\n  _subExtractor(index) {\n    let itemIndex = index;\n    const {\n      getItem,\n      getItemCount,\n      keyExtractor,\n      sections\n    } = this.props;\n    for (let i = 0; i < sections.length; i++) {\n      const section = sections[i];\n      const sectionData = section.data;\n      const key = section.key || String(i);\n      itemIndex -= 1;\n      if (itemIndex >= getItemCount(sectionData) + 1) {\n        itemIndex -= getItemCount(sectionData) + 1;\n      } else if (itemIndex === -1) {\n        return {\n          section,\n          key: key + ':header',\n          index: null,\n          header: true,\n          trailingSection: sections[i + 1]\n        };\n      } else if (itemIndex === getItemCount(sectionData)) {\n        return {\n          section,\n          key: key + ':footer',\n          index: null,\n          header: false,\n          trailingSection: sections[i + 1]\n        };\n      } else {\n        const extractor = section.keyExtractor || keyExtractor || defaultKeyExtractor;\n        return {\n          section,\n          key: key + ':' + extractor(getItem(sectionData, itemIndex), itemIndex),\n          index: itemIndex,\n          leadingItem: getItem(sectionData, itemIndex - 1),\n          leadingSection: sections[i - 1],\n          trailingItem: getItem(sectionData, itemIndex + 1),\n          trailingSection: sections[i + 1]\n        };\n      }\n    }\n  }\n  _getSeparatorComponent(index, info, listItemCount) {\n    info = info || this._subExtractor(index);\n    if (!info) {\n      return null;\n    }\n    const ItemSeparatorComponent = info.section.ItemSeparatorComponent || this.props.ItemSeparatorComponent;\n    const {\n      SectionSeparatorComponent\n    } = this.props;\n    const isLastItemInList = index === listItemCount - 1;\n    const isLastItemInSection = info.index === this.props.getItemCount(info.section.data) - 1;\n    if (SectionSeparatorComponent && isLastItemInSection) {\n      return SectionSeparatorComponent;\n    }\n    if (ItemSeparatorComponent && !isLastItemInSection && !isLastItemInList) {\n      return ItemSeparatorComponent;\n    }\n    return null;\n  }\n}\nfunction ItemWithSeparator(props) {\n  const {\n    LeadingSeparatorComponent,\n    SeparatorComponent,\n    cellKey,\n    prevCellKey,\n    setSelfHighlightCallback,\n    updateHighlightFor,\n    setSelfUpdatePropsCallback,\n    updatePropsFor,\n    item,\n    index,\n    section,\n    inverted\n  } = props;\n  const [leadingSeparatorHiglighted, setLeadingSeparatorHighlighted] = React.useState(false);\n  const [separatorHighlighted, setSeparatorHighlighted] = React.useState(false);\n  const [leadingSeparatorProps, setLeadingSeparatorProps] = React.useState({\n    leadingItem: props.leadingItem,\n    leadingSection: props.leadingSection,\n    section: props.section,\n    trailingItem: props.item,\n    trailingSection: props.trailingSection\n  });\n  const [separatorProps, setSeparatorProps] = React.useState({\n    leadingItem: props.item,\n    leadingSection: props.leadingSection,\n    section: props.section,\n    trailingItem: props.trailingItem,\n    trailingSection: props.trailingSection\n  });\n  React.useEffect(() => {\n    setSelfHighlightCallback(cellKey, setSeparatorHighlighted);\n    setSelfUpdatePropsCallback(cellKey, setSeparatorProps);\n    return () => {\n      setSelfUpdatePropsCallback(cellKey, null);\n      setSelfHighlightCallback(cellKey, null);\n    };\n  }, [cellKey, setSelfHighlightCallback, setSeparatorProps, setSelfUpdatePropsCallback]);\n  const separators = {\n    highlight: () => {\n      setLeadingSeparatorHighlighted(true);\n      setSeparatorHighlighted(true);\n      if (prevCellKey != null) {\n        updateHighlightFor(prevCellKey, true);\n      }\n    },\n    unhighlight: () => {\n      setLeadingSeparatorHighlighted(false);\n      setSeparatorHighlighted(false);\n      if (prevCellKey != null) {\n        updateHighlightFor(prevCellKey, false);\n      }\n    },\n    updateProps: (select, newProps) => {\n      if (select === 'leading') {\n        if (LeadingSeparatorComponent != null) {\n          setLeadingSeparatorProps(Object.assign({}, leadingSeparatorProps, newProps));\n        } else if (prevCellKey != null) {\n          updatePropsFor(prevCellKey, Object.assign({}, leadingSeparatorProps, newProps));\n        }\n      } else if (select === 'trailing' && SeparatorComponent != null) {\n        setSeparatorProps(Object.assign({}, separatorProps, newProps));\n      }\n    }\n  };\n  const element = props.renderItem({\n    item,\n    index,\n    section,\n    separators\n  });\n  const leadingSeparator = LeadingSeparatorComponent != null && _jsxDEV(LeadingSeparatorComponent, Object.assign({\n    highlighted: leadingSeparatorHiglighted\n  }, leadingSeparatorProps), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 577,\n    columnNumber: 5\n  }, this);\n  const separator = SeparatorComponent != null && _jsxDEV(SeparatorComponent, Object.assign({\n    highlighted: separatorHighlighted\n  }, separatorProps), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 583,\n    columnNumber: 5\n  }, this);\n  const RenderSeparator = leadingSeparator || separator;\n  const firstSeparator = inverted === false ? leadingSeparator : separator;\n  const secondSeparator = inverted === false ? separator : leadingSeparator;\n  return _jsxDEV(_Fragment, {\n    children: [RenderSeparator ? firstSeparator : null, element, RenderSeparator ? secondSeparator : null]\n  }, void 0, true);\n}\nmodule.exports = VirtualizedSectionList;","map":{"version":3,"names":["VirtualizedList","keyExtractor","defaultKeyExtractor","invariant","React","jsxDEV","_jsxDEV","Fragment","_Fragment","VirtualizedSectionList","PureComponent","constructor","args","_keyExtractor","item","index","info","_subExtractor","key","String","_convertViewable","viewable","keyExtractorWithNullableIndex","section","keyExtractorWithNonNullableIndex","props","Object","assign","_onViewableItemsChanged","viewableItems","changed","onViewableItemsChanged","map","filter","Boolean","_renderItem","listItemCount","infoIndex","header","renderSectionHeader","renderSectionFooter","renderItem","SeparatorComponent","_getSeparatorComponent","ItemWithSeparator","LeadingSeparatorComponent","SectionSeparatorComponent","undefined","cellKey","leadingItem","leadingSection","prevCellKey","setSelfHighlightCallback","_setUpdateHighlightFor","setSelfUpdatePropsCallback","_setUpdatePropsFor","updateHighlightFor","_updateHighlightFor","updatePropsFor","_updatePropsFor","trailingItem","trailingSection","inverted","fileName","_jsxFileName","lineNumber","columnNumber","value","updateProps","_updatePropsMap","updateHighlight","_updateHighlightMap","updateHighlightFn","updatePropsFn","_listRef","_captureRef","ref","scrollToLocation","params","itemIndex","i","sectionIndex","getItemCount","sections","data","viewOffset","listRef","stickySectionHeadersEnabled","frame","__getListMetrics","getCellMetricsApprox","length","toIndexParams","scrollToIndex","getListRef","render","_this$props","passThroughProps","_objectWithoutPropertiesLoose","_excluded","listHeaderOffset","ListHeaderComponent","stickyHeaderIndices","itemCount","push","getItem","_getItem","itemIdx","sectionData","extractor","ItemSeparatorComponent","isLastItemInList","isLastItemInSection","leadingSeparatorHiglighted","setLeadingSeparatorHighlighted","useState","separatorHighlighted","setSeparatorHighlighted","leadingSeparatorProps","setLeadingSeparatorProps","separatorProps","setSeparatorProps","useEffect","separators","highlight","unhighlight","select","newProps","element","leadingSeparator","highlighted","separator","RenderSeparator","firstSeparator","secondSeparator","children","module","exports"],"sources":["F:/MiniProject/node_modules/@react-native/virtualized-lists/Lists/VirtualizedSectionList.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {ViewToken} from './ViewabilityHelper';\n\nimport VirtualizedList from './VirtualizedList';\nimport {keyExtractor as defaultKeyExtractor} from './VirtualizeUtils';\nimport invariant from 'invariant';\nimport * as React from 'react';\ntype Item = any;\n\nexport type SectionBase<SectionItemT> = {\n  /**\n   * The data for rendering items in this section.\n   */\n  data: $ReadOnlyArray<SectionItemT>,\n  /**\n   * Optional key to keep track of section re-ordering. If you don't plan on re-ordering sections,\n   * the array index will be used by default.\n   */\n  key?: string,\n  // Optional props will override list-wide props just for this section.\n  renderItem?: ?(info: {\n    item: SectionItemT,\n    index: number,\n    section: SectionBase<SectionItemT>,\n    separators: {\n      highlight: () => void,\n      unhighlight: () => void,\n      updateProps: (select: 'leading' | 'trailing', newProps: Object) => void,\n      ...\n    },\n    ...\n  }) => null | React.MixedElement,\n  ItemSeparatorComponent?: ?React.ComponentType<any>,\n  keyExtractor?: (item: SectionItemT, index?: ?number) => string,\n  ...\n};\n\ntype RequiredProps<SectionT: SectionBase<any>> = {|\n  sections: $ReadOnlyArray<SectionT>,\n|};\n\ntype OptionalProps<SectionT: SectionBase<any>> = {|\n  /**\n   * Default renderer for every item in every section.\n   */\n  renderItem?: (info: {\n    item: Item,\n    index: number,\n    section: SectionT,\n    separators: {\n      highlight: () => void,\n      unhighlight: () => void,\n      updateProps: (select: 'leading' | 'trailing', newProps: Object) => void,\n      ...\n    },\n    ...\n  }) => null | React.Node,\n  /**\n   * Rendered at the top of each section. These stick to the top of the `ScrollView` by default on\n   * iOS. See `stickySectionHeadersEnabled`.\n   */\n  renderSectionHeader?: ?(info: {section: SectionT, ...}) => null | React.Node,\n  /**\n   * Rendered at the bottom of each section.\n   */\n  renderSectionFooter?: ?(info: {section: SectionT, ...}) => null | React.Node,\n  /**\n   * Rendered at the top and bottom of each section (note this is different from\n   * `ItemSeparatorComponent` which is only rendered between items). These are intended to separate\n   * sections from the headers above and below and typically have the same highlight response as\n   * `ItemSeparatorComponent`. Also receives `highlighted`, `[leading/trailing][Item/Separator]`,\n   * and any custom props from `separators.updateProps`.\n   */\n  SectionSeparatorComponent?: ?React.ComponentType<any>,\n  /**\n   * Makes section headers stick to the top of the screen until the next one pushes it off. Only\n   * enabled by default on iOS because that is the platform standard there.\n   */\n  stickySectionHeadersEnabled?: boolean,\n  onEndReached?: ?({distanceFromEnd: number, ...}) => void,\n|};\n\ntype VirtualizedListProps = React.ElementConfig<typeof VirtualizedList>;\n\nexport type Props<SectionT> = {|\n  ...RequiredProps<SectionT>,\n  ...OptionalProps<SectionT>,\n  ...$Diff<\n    VirtualizedListProps,\n    {\n      renderItem: $PropertyType<VirtualizedListProps, 'renderItem'>,\n      data: $PropertyType<VirtualizedListProps, 'data'>,\n      ...\n    },\n  >,\n|};\nexport type ScrollToLocationParamsType = {|\n  animated?: ?boolean,\n  itemIndex: number,\n  sectionIndex: number,\n  viewOffset?: number,\n  viewPosition?: number,\n|};\n\ntype State = {childProps: VirtualizedListProps, ...};\n\n/**\n * Right now this just flattens everything into one list and uses VirtualizedList under the\n * hood. The only operation that might not scale well is concatting the data arrays of all the\n * sections when new props are received, which should be plenty fast for up to ~10,000 items.\n */\nclass VirtualizedSectionList<\n  SectionT: SectionBase<any>,\n> extends React.PureComponent<Props<SectionT>, State> {\n  scrollToLocation(params: ScrollToLocationParamsType) {\n    let index = params.itemIndex;\n    for (let i = 0; i < params.sectionIndex; i++) {\n      index += this.props.getItemCount(this.props.sections[i].data) + 2;\n    }\n    let viewOffset = params.viewOffset || 0;\n    if (this._listRef == null) {\n      return;\n    }\n    const listRef = this._listRef;\n    if (params.itemIndex > 0 && this.props.stickySectionHeadersEnabled) {\n      const frame = listRef\n        .__getListMetrics()\n        .getCellMetricsApprox(index - params.itemIndex, listRef.props);\n      viewOffset += frame.length;\n    }\n    const toIndexParams = {\n      ...params,\n      viewOffset,\n      index,\n    };\n    // $FlowFixMe[incompatible-use]\n    this._listRef.scrollToIndex(toIndexParams);\n  }\n\n  getListRef(): ?React.ElementRef<typeof VirtualizedList> {\n    return this._listRef;\n  }\n\n  render(): React.Node {\n    const {\n      ItemSeparatorComponent, // don't pass through, rendered with renderItem\n      SectionSeparatorComponent,\n      renderItem: _renderItem,\n      renderSectionFooter,\n      renderSectionHeader,\n      sections: _sections,\n      stickySectionHeadersEnabled,\n      ...passThroughProps\n    } = this.props;\n\n    const listHeaderOffset = this.props.ListHeaderComponent ? 1 : 0;\n\n    const stickyHeaderIndices = this.props.stickySectionHeadersEnabled\n      ? ([]: Array<number>)\n      : undefined;\n\n    let itemCount = 0;\n    for (const section of this.props.sections) {\n      // Track the section header indices\n      if (stickyHeaderIndices != null) {\n        stickyHeaderIndices.push(itemCount + listHeaderOffset);\n      }\n\n      // Add two for the section header and footer.\n      itemCount += 2;\n      itemCount += this.props.getItemCount(section.data);\n    }\n    const renderItem = this._renderItem(itemCount);\n\n    return (\n      <VirtualizedList\n        {...passThroughProps}\n        keyExtractor={this._keyExtractor}\n        stickyHeaderIndices={stickyHeaderIndices}\n        renderItem={renderItem}\n        data={this.props.sections}\n        getItem={(sections, index) =>\n          this._getItem(this.props, sections, index)\n        }\n        getItemCount={() => itemCount}\n        onViewableItemsChanged={\n          this.props.onViewableItemsChanged\n            ? this._onViewableItemsChanged\n            : undefined\n        }\n        ref={this._captureRef}\n      />\n    );\n  }\n\n  _getItem(\n    props: Props<SectionT>,\n    sections: ?$ReadOnlyArray<Item>,\n    index: number,\n  ): ?Item {\n    if (!sections) {\n      return null;\n    }\n    let itemIdx = index - 1;\n    for (let i = 0; i < sections.length; i++) {\n      const section = sections[i];\n      const sectionData = section.data;\n      const itemCount = props.getItemCount(sectionData);\n      if (itemIdx === -1 || itemIdx === itemCount) {\n        // We intend for there to be overflow by one on both ends of the list.\n        // This will be for headers and footers. When returning a header or footer\n        // item the section itself is the item.\n        return section;\n      } else if (itemIdx < itemCount) {\n        // If we are in the bounds of the list's data then return the item.\n        return props.getItem(sectionData, itemIdx);\n      } else {\n        itemIdx -= itemCount + 2; // Add two for the header and footer\n      }\n    }\n    return null;\n  }\n\n  // $FlowFixMe[missing-local-annot]\n  _keyExtractor = (item: Item, index: number) => {\n    const info = this._subExtractor(index);\n    return (info && info.key) || String(index);\n  };\n\n  _subExtractor(index: number): ?{\n    section: SectionT,\n    // Key of the section or combined key for section + item\n    key: string,\n    // Relative index within the section\n    index: ?number,\n    // True if this is the section header\n    header?: ?boolean,\n    leadingItem?: ?Item,\n    leadingSection?: ?SectionT,\n    trailingItem?: ?Item,\n    trailingSection?: ?SectionT,\n    ...\n  } {\n    let itemIndex = index;\n    const {getItem, getItemCount, keyExtractor, sections} = this.props;\n    for (let i = 0; i < sections.length; i++) {\n      const section = sections[i];\n      const sectionData = section.data;\n      const key = section.key || String(i);\n      itemIndex -= 1; // The section adds an item for the header\n      if (itemIndex >= getItemCount(sectionData) + 1) {\n        itemIndex -= getItemCount(sectionData) + 1; // The section adds an item for the footer.\n      } else if (itemIndex === -1) {\n        return {\n          section,\n          key: key + ':header',\n          index: null,\n          header: true,\n          trailingSection: sections[i + 1],\n        };\n      } else if (itemIndex === getItemCount(sectionData)) {\n        return {\n          section,\n          key: key + ':footer',\n          index: null,\n          header: false,\n          trailingSection: sections[i + 1],\n        };\n      } else {\n        const extractor =\n          section.keyExtractor || keyExtractor || defaultKeyExtractor;\n        return {\n          section,\n          key:\n            key + ':' + extractor(getItem(sectionData, itemIndex), itemIndex),\n          index: itemIndex,\n          leadingItem: getItem(sectionData, itemIndex - 1),\n          leadingSection: sections[i - 1],\n          trailingItem: getItem(sectionData, itemIndex + 1),\n          trailingSection: sections[i + 1],\n        };\n      }\n    }\n  }\n\n  _convertViewable = (viewable: ViewToken): ?ViewToken => {\n    invariant(viewable.index != null, 'Received a broken ViewToken');\n    const info = this._subExtractor(viewable.index);\n    if (!info) {\n      return null;\n    }\n    const keyExtractorWithNullableIndex = info.section.keyExtractor;\n    const keyExtractorWithNonNullableIndex =\n      this.props.keyExtractor || defaultKeyExtractor;\n    const key =\n      keyExtractorWithNullableIndex != null\n        ? keyExtractorWithNullableIndex(viewable.item, info.index)\n        : keyExtractorWithNonNullableIndex(viewable.item, info.index ?? 0);\n\n    return {\n      ...viewable,\n      index: info.index,\n      key,\n      section: info.section,\n    };\n  };\n\n  _onViewableItemsChanged = ({\n    viewableItems,\n    changed,\n  }: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n    ...\n  }) => {\n    const onViewableItemsChanged = this.props.onViewableItemsChanged;\n    if (onViewableItemsChanged != null) {\n      onViewableItemsChanged({\n        viewableItems: viewableItems\n          .map(this._convertViewable, this)\n          .filter(Boolean),\n        changed: changed.map(this._convertViewable, this).filter(Boolean),\n      });\n    }\n  };\n\n  _renderItem =\n    (listItemCount: number): $FlowFixMe =>\n    // eslint-disable-next-line react/no-unstable-nested-components\n    ({item, index}: {item: Item, index: number, ...}) => {\n      const info = this._subExtractor(index);\n      if (!info) {\n        return null;\n      }\n      const infoIndex = info.index;\n      if (infoIndex == null) {\n        const {section} = info;\n        if (info.header === true) {\n          const {renderSectionHeader} = this.props;\n          return renderSectionHeader ? renderSectionHeader({section}) : null;\n        } else {\n          const {renderSectionFooter} = this.props;\n          return renderSectionFooter ? renderSectionFooter({section}) : null;\n        }\n      } else {\n        const renderItem = info.section.renderItem || this.props.renderItem;\n        const SeparatorComponent = this._getSeparatorComponent(\n          index,\n          info,\n          listItemCount,\n        );\n        invariant(renderItem, 'no renderItem!');\n        return (\n          <ItemWithSeparator\n            SeparatorComponent={SeparatorComponent}\n            LeadingSeparatorComponent={\n              infoIndex === 0 ? this.props.SectionSeparatorComponent : undefined\n            }\n            cellKey={info.key}\n            index={infoIndex}\n            item={item}\n            leadingItem={info.leadingItem}\n            leadingSection={info.leadingSection}\n            prevCellKey={(this._subExtractor(index - 1) || {}).key}\n            // Callback to provide updateHighlight for this item\n            setSelfHighlightCallback={this._setUpdateHighlightFor}\n            setSelfUpdatePropsCallback={this._setUpdatePropsFor}\n            // Provide child ability to set highlight/updateProps for previous item using prevCellKey\n            updateHighlightFor={this._updateHighlightFor}\n            updatePropsFor={this._updatePropsFor}\n            renderItem={renderItem}\n            section={info.section}\n            trailingItem={info.trailingItem}\n            trailingSection={info.trailingSection}\n            inverted={!!this.props.inverted}\n          />\n        );\n      }\n    };\n\n  _updatePropsFor = (cellKey: string, value: any) => {\n    const updateProps = this._updatePropsMap[cellKey];\n    if (updateProps != null) {\n      updateProps(value);\n    }\n  };\n\n  _updateHighlightFor = (cellKey: string, value: boolean) => {\n    const updateHighlight = this._updateHighlightMap[cellKey];\n    if (updateHighlight != null) {\n      updateHighlight(value);\n    }\n  };\n\n  _setUpdateHighlightFor = (\n    cellKey: string,\n    updateHighlightFn: ?(boolean) => void,\n  ) => {\n    if (updateHighlightFn != null) {\n      this._updateHighlightMap[cellKey] = updateHighlightFn;\n    } else {\n      // $FlowFixMe[prop-missing]\n      delete this._updateHighlightFor[cellKey];\n    }\n  };\n\n  _setUpdatePropsFor = (cellKey: string, updatePropsFn: ?(boolean) => void) => {\n    if (updatePropsFn != null) {\n      this._updatePropsMap[cellKey] = updatePropsFn;\n    } else {\n      delete this._updatePropsMap[cellKey];\n    }\n  };\n\n  _getSeparatorComponent(\n    index: number,\n    info?: ?Object,\n    listItemCount: number,\n  ): ?React.ComponentType<any> {\n    info = info || this._subExtractor(index);\n    if (!info) {\n      return null;\n    }\n    const ItemSeparatorComponent =\n      info.section.ItemSeparatorComponent || this.props.ItemSeparatorComponent;\n    const {SectionSeparatorComponent} = this.props;\n    const isLastItemInList = index === listItemCount - 1;\n    const isLastItemInSection =\n      info.index === this.props.getItemCount(info.section.data) - 1;\n    if (SectionSeparatorComponent && isLastItemInSection) {\n      return SectionSeparatorComponent;\n    }\n    if (ItemSeparatorComponent && !isLastItemInSection && !isLastItemInList) {\n      return ItemSeparatorComponent;\n    }\n    return null;\n  }\n\n  _updateHighlightMap: {[string]: (boolean) => void} = {};\n  _updatePropsMap: {[string]: void | (boolean => void)} = {};\n  _listRef: ?VirtualizedList;\n  _captureRef = (ref: null | VirtualizedList) => {\n    this._listRef = ref;\n  };\n}\n\ntype ItemWithSeparatorCommonProps = $ReadOnly<{|\n  leadingItem: ?Item,\n  leadingSection: ?Object,\n  section: Object,\n  trailingItem: ?Item,\n  trailingSection: ?Object,\n|}>;\n\ntype ItemWithSeparatorProps = $ReadOnly<{|\n  ...ItemWithSeparatorCommonProps,\n  LeadingSeparatorComponent: ?React.ComponentType<any>,\n  SeparatorComponent: ?React.ComponentType<any>,\n  cellKey: string,\n  index: number,\n  item: Item,\n  setSelfHighlightCallback: (\n    cellKey: string,\n    updateFn: ?(boolean) => void,\n  ) => void,\n  setSelfUpdatePropsCallback: (\n    cellKey: string,\n    updateFn: ?(boolean) => void,\n  ) => void,\n  prevCellKey?: ?string,\n  updateHighlightFor: (prevCellKey: string, value: boolean) => void,\n  updatePropsFor: (prevCellKey: string, value: Object) => void,\n  renderItem: Function,\n  inverted: boolean,\n|}>;\n\nfunction ItemWithSeparator(props: ItemWithSeparatorProps): React.Node {\n  const {\n    LeadingSeparatorComponent,\n    // this is the trailing separator and is associated with this item\n    SeparatorComponent,\n    cellKey,\n    prevCellKey,\n    setSelfHighlightCallback,\n    updateHighlightFor,\n    setSelfUpdatePropsCallback,\n    updatePropsFor,\n    item,\n    index,\n    section,\n    inverted,\n  } = props;\n\n  const [leadingSeparatorHiglighted, setLeadingSeparatorHighlighted] =\n    React.useState(false);\n\n  const [separatorHighlighted, setSeparatorHighlighted] = React.useState(false);\n\n  const [leadingSeparatorProps, setLeadingSeparatorProps] = React.useState({\n    leadingItem: props.leadingItem,\n    leadingSection: props.leadingSection,\n    section: props.section,\n    trailingItem: props.item,\n    trailingSection: props.trailingSection,\n  });\n  const [separatorProps, setSeparatorProps] = React.useState({\n    leadingItem: props.item,\n    leadingSection: props.leadingSection,\n    section: props.section,\n    trailingItem: props.trailingItem,\n    trailingSection: props.trailingSection,\n  });\n\n  React.useEffect(() => {\n    setSelfHighlightCallback(cellKey, setSeparatorHighlighted);\n    // $FlowFixMe[incompatible-call]\n    setSelfUpdatePropsCallback(cellKey, setSeparatorProps);\n\n    return () => {\n      setSelfUpdatePropsCallback(cellKey, null);\n      setSelfHighlightCallback(cellKey, null);\n    };\n  }, [\n    cellKey,\n    setSelfHighlightCallback,\n    setSeparatorProps,\n    setSelfUpdatePropsCallback,\n  ]);\n\n  const separators = {\n    highlight: () => {\n      setLeadingSeparatorHighlighted(true);\n      setSeparatorHighlighted(true);\n      if (prevCellKey != null) {\n        updateHighlightFor(prevCellKey, true);\n      }\n    },\n    unhighlight: () => {\n      setLeadingSeparatorHighlighted(false);\n      setSeparatorHighlighted(false);\n      if (prevCellKey != null) {\n        updateHighlightFor(prevCellKey, false);\n      }\n    },\n    updateProps: (\n      select: 'leading' | 'trailing',\n      newProps: Partial<ItemWithSeparatorCommonProps>,\n    ) => {\n      if (select === 'leading') {\n        if (LeadingSeparatorComponent != null) {\n          setLeadingSeparatorProps({...leadingSeparatorProps, ...newProps});\n        } else if (prevCellKey != null) {\n          // update the previous item's separator\n          updatePropsFor(prevCellKey, {...leadingSeparatorProps, ...newProps});\n        }\n      } else if (select === 'trailing' && SeparatorComponent != null) {\n        setSeparatorProps({...separatorProps, ...newProps});\n      }\n    },\n  };\n  const element = props.renderItem({\n    item,\n    index,\n    section,\n    separators,\n  });\n  const leadingSeparator = LeadingSeparatorComponent != null && (\n    <LeadingSeparatorComponent\n      highlighted={leadingSeparatorHiglighted}\n      {...leadingSeparatorProps}\n    />\n  );\n  const separator = SeparatorComponent != null && (\n    <SeparatorComponent\n      highlighted={separatorHighlighted}\n      {...separatorProps}\n    />\n  );\n  const RenderSeparator = leadingSeparator || separator;\n  const firstSeparator = inverted === false ? leadingSeparator : separator;\n  const secondSeparator = inverted === false ? separator : leadingSeparator;\n\n  return (\n    <>\n      {RenderSeparator ? firstSeparator : null}\n      {element}\n      {RenderSeparator ? secondSeparator : null}\n    </>\n  );\n}\n\n/* $FlowFixMe[class-object-subtyping] added when improving typing for this\n * parameters */\n// $FlowFixMe[method-unbinding]\nmodule.exports = (VirtualizedSectionList: React.AbstractComponent<\n  React.ElementConfig<typeof VirtualizedSectionList>,\n  $ReadOnly<{\n    getListRef: () => ?React.ElementRef<typeof VirtualizedList>,\n    scrollToLocation: (params: ScrollToLocationParamsType) => void,\n    ...\n  }>,\n>);\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"module","externalDependencies":[]}