{"ast":null,"code":"import React, { Children } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nexport const LEGACY_childrenWithOverriddenStyle = children => {\n  return Children.map(children, child => {\n    const element = child;\n    return (React.createElement(View, {\n        style: StyleSheet.absoluteFill,\n        collapsable: false\n      }, React.cloneElement(element, Object.assign({}, element.props, {\n        style: [element.props.style, StyleSheet.absoluteFill]\n      })))\n    );\n  });\n};\nexport const childrenWithOverriddenStyle = (children, pageMargin = 0) => {\n  return Children.map(children, child => {\n    return React.createElement(View, {\n      style: {\n        height: '100%',\n        width: '100%',\n        paddingHorizontal: pageMargin / 2,\n        position: Platform.OS === 'android' ? 'absolute' : undefined\n      },\n      collapsable: false\n    }, child);\n  });\n};","map":{"version":3,"names":["React","Children","Platform","StyleSheet","View","LEGACY_childrenWithOverriddenStyle","children","map","child","element","createElement","style","absoluteFill","collapsable","cloneElement","Object","assign","props","childrenWithOverriddenStyle","pageMargin","height","width","paddingHorizontal","position","OS","undefined"],"sources":["F:\\MiniProject\\node_modules\\react-native-pager-view\\lib\\module\\utils.tsx"],"sourcesContent":["import React, { Children, ReactNode } from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\n\nexport const LEGACY_childrenWithOverriddenStyle = (children?: ReactNode) => {\n  return Children.map(children, (child) => {\n    const element = child as React.ReactElement;\n    return (\n      // Add a wrapper to ensure layout is calculated correctly\n      <View style={StyleSheet.absoluteFill} collapsable={false}>\n        {/* @ts-ignore */}\n        {React.cloneElement(element, {\n          ...element.props,\n          // Override styles so that each page will fill the parent.\n          style: [element.props.style, StyleSheet.absoluteFill],\n        })}\n      </View>\n    );\n  });\n};\n\nexport const childrenWithOverriddenStyle = (\n  children?: ReactNode,\n  pageMargin = 0\n) => {\n  return Children.map(children, (child) => {\n    return (\n      <View\n        style={{\n          height: '100%',\n          width: '100%',\n          paddingHorizontal: pageMargin / 2,\n          position: Platform.OS === 'android' ? 'absolute' : undefined,\n        }}\n        collapsable={false}\n      >\n        {child}\n      </View>\n    );\n  });\n};\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAmB,OAAO;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAGlD,OAAO,MAAMC,kCAAkC,GAAIC,QAAoB,IAAK;EAC1E,OAAOL,QAAQ,CAACM,GAAG,CAACD,QAAQ,EAAGE,KAAK,IAAK;IACvC,MAAMC,OAAO,GAAGD,KAA2B;IAC3C,QAEER,KAAA,CAAAU,aAAA,CAACN,IAAI;QAACO,KAAK,EAAER,UAAU,CAACS,YAAa;QAACC,WAAW,EAAE;MAAM,GAEtDb,KAAK,CAACc,YAAY,CAACL,OAAO,EAAAM,MAAA,CAAAC,MAAA,KACtBP,OAAO,CAACQ,KAAK;QAEhBN,KAAK,EAAE,CAACF,OAAO,CAACQ,KAAK,CAACN,KAAK,EAAER,UAAU,CAACS,YAAY;MAAA,EACrD,CACG;IAAA;EAEV,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMM,2BAA2B,GAAGA,CACzCZ,QAAoB,EACpBa,UAAU,GAAG,CAAC,KACX;EACH,OAAOlB,QAAQ,CAACM,GAAG,CAACD,QAAQ,EAAGE,KAAK,IAAK;IACvC,OACER,KAAA,CAAAU,aAAA,CAACN,IAAI;MACHO,KAAK,EAAE;QACLS,MAAM,EAAE,MAAM;QACdC,KAAK,EAAE,MAAM;QACbC,iBAAiB,EAAEH,UAAU,GAAG,CAAC;QACjCI,QAAQ,EAAErB,QAAQ,CAACsB,EAAE,KAAK,SAAS,GAAG,UAAU,GAAGC;MACrD,CAAE;MACFZ,WAAW,EAAE;IAAM,GAElBL,KACG,CAAC;EAEX,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}