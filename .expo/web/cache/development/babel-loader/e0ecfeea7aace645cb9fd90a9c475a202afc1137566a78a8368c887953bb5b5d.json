{"ast":null,"code":"import _classPrivateFieldLooseBase from \"@babel/runtime/helpers/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/classPrivateFieldLooseKey\";\nvar _listeners = _classPrivateFieldLooseKey(\"listeners\");\nclass EventScope {\n  constructor() {\n    Object.defineProperty(this, _listeners, {\n      writable: true,\n      value: new Set()\n    });\n  }\n  addEventListener(listener) {\n    _classPrivateFieldLooseBase(this, _listeners)[_listeners].add(listener);\n  }\n  removeEventListener(listener) {\n    _classPrivateFieldLooseBase(this, _listeners)[_listeners].delete(listener);\n  }\n  emit(value) {\n    for (const listener of _classPrivateFieldLooseBase(this, _listeners)[_listeners]) {\n      listener(value);\n    }\n  }\n}\nexport class Domain {\n  constructor(name) {\n    this.name = void 0;\n    this.onMessage = void 0;\n    if (global[FuseboxReactDevToolsDispatcher.BINDING_NAME] == null) {\n      throw new Error(`Could not create domain ${name}: receiving end doesn't exist`);\n    }\n    this.name = name;\n    this.onMessage = new EventScope();\n  }\n  sendMessage(message) {\n    const messageWithDomain = {\n      domain: this.name,\n      message\n    };\n    const serializedMessageWithDomain = JSON.stringify(messageWithDomain);\n    global[FuseboxReactDevToolsDispatcher.BINDING_NAME](serializedMessageWithDomain);\n  }\n}\nvar _domainNameToDomainMap = _classPrivateFieldLooseKey(\"domainNameToDomainMap\");\nclass FuseboxReactDevToolsDispatcher {\n  static initializeDomain(domainName) {\n    const domain = new Domain(domainName);\n    _classPrivateFieldLooseBase(this, _domainNameToDomainMap)[_domainNameToDomainMap].set(domainName, domain);\n    this.onDomainInitialization.emit(domain);\n    return domain;\n  }\n  static sendMessage(domainName, message) {\n    const domain = _classPrivateFieldLooseBase(this, _domainNameToDomainMap)[_domainNameToDomainMap].get(domainName);\n    if (domain == null) {\n      throw new Error(`Could not send message to ${domainName}: domain doesn't exist`);\n    }\n    try {\n      const parsedMessage = JSON.parse(message);\n      domain.onMessage.emit(parsedMessage);\n    } catch (err) {\n      console.error(`Error while trying to send a message to domain ${domainName}:`, err);\n    }\n  }\n}\nObject.defineProperty(FuseboxReactDevToolsDispatcher, _domainNameToDomainMap, {\n  writable: true,\n  value: new Map()\n});\nFuseboxReactDevToolsDispatcher.BINDING_NAME = '__CHROME_DEVTOOLS_FRONTEND_BINDING__';\nFuseboxReactDevToolsDispatcher.onDomainInitialization = new EventScope();\nObject.defineProperty(global, '__FUSEBOX_REACT_DEVTOOLS_DISPATCHER__', {\n  value: FuseboxReactDevToolsDispatcher,\n  configurable: false,\n  enumerable: false,\n  writable: false\n});","map":{"version":3,"names":["EventScope","constructor","Object","defineProperty","_listeners","writable","value","Set","addEventListener","listener","_classPrivateFieldLooseBase","add","removeEventListener","delete","emit","Domain","name","onMessage","global","FuseboxReactDevToolsDispatcher","BINDING_NAME","Error","sendMessage","message","messageWithDomain","domain","serializedMessageWithDomain","JSON","stringify","_domainNameToDomainMap","_classPrivateFieldLooseKey","initializeDomain","domainName","set","onDomainInitialization","get","parsedMessage","parse","err","console","error","Map","configurable","enumerable"],"sources":["F:/MiniProject/node_modules/react-native/src/private/fusebox/setUpFuseboxReactDevToolsDispatcher.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n * @oncall react_native\n */\n\ntype JSONValue =\n  | string\n  | number\n  | boolean\n  | null\n  | {[key: string]: JSONValue}\n  | Array<JSONValue>;\ntype DomainName = 'react-devtools';\n\nclass EventScope<T> {\n  #listeners: Set<(T) => void> = new Set();\n\n  addEventListener(listener: T => void): void {\n    this.#listeners.add(listener);\n  }\n\n  removeEventListener(listener: T => void): void {\n    this.#listeners.delete(listener);\n  }\n\n  emit(value: T): void {\n    // Assuming that listeners won't throw.\n    for (const listener of this.#listeners) {\n      listener(value);\n    }\n  }\n}\n\nexport class Domain {\n  name: DomainName;\n  onMessage: EventScope<JSONValue>;\n\n  constructor(name: DomainName) {\n    if (global[FuseboxReactDevToolsDispatcher.BINDING_NAME] == null) {\n      throw new Error(\n        `Could not create domain ${name}: receiving end doesn't exist`,\n      );\n    }\n\n    this.name = name;\n    this.onMessage = new EventScope<JSONValue>();\n  }\n\n  sendMessage(message: JSONValue) {\n    const messageWithDomain = {domain: this.name, message};\n    const serializedMessageWithDomain = JSON.stringify(messageWithDomain);\n\n    global[FuseboxReactDevToolsDispatcher.BINDING_NAME](\n      serializedMessageWithDomain,\n    );\n  }\n}\n\nclass FuseboxReactDevToolsDispatcher {\n  static #domainNameToDomainMap: Map<DomainName, Domain> = new Map();\n\n  // Referenced and initialized from Chrome DevTools frontend.\n  static BINDING_NAME: string = '__CHROME_DEVTOOLS_FRONTEND_BINDING__';\n  static onDomainInitialization: EventScope<Domain> = new EventScope<Domain>();\n\n  // Should be private, referenced from Chrome DevTools frontend only.\n  static initializeDomain(domainName: DomainName): Domain {\n    const domain = new Domain(domainName);\n\n    this.#domainNameToDomainMap.set(domainName, domain);\n    this.onDomainInitialization.emit(domain);\n\n    return domain;\n  }\n\n  // Should be private, referenced from Chrome DevTools frontend only.\n  static sendMessage(domainName: DomainName, message: string): void {\n    const domain = this.#domainNameToDomainMap.get(domainName);\n    if (domain == null) {\n      throw new Error(\n        `Could not send message to ${domainName}: domain doesn't exist`,\n      );\n    }\n\n    try {\n      const parsedMessage = JSON.parse(message);\n      domain.onMessage.emit(parsedMessage);\n    } catch (err) {\n      console.error(\n        `Error while trying to send a message to domain ${domainName}:`,\n        err,\n      );\n    }\n  }\n}\n\nObject.defineProperty(global, '__FUSEBOX_REACT_DEVTOOLS_DISPATCHER__', {\n  value: FuseboxReactDevToolsDispatcher,\n  configurable: false,\n  enumerable: false,\n  writable: false,\n});\n"],"mappings":";;;AAoBA,MAAMA,UAAU,CAAI;EAAAC,YAAA;IAAAC,MAAA,CAAAC,cAAA,OAAAC,UAAA;MAAAC,QAAA;MAAAC,KAAA,EACa,IAAIC,GAAG,CAAC;IAAC;EAAA;EAExCC,gBAAgBA,CAACC,QAAmB,EAAQ;IAC1CC,2BAAA,KAAI,EAAAN,UAAA,EAAAA,UAAA,EAAYO,GAAG,CAACF,QAAQ,CAAC;EAC/B;EAEAG,mBAAmBA,CAACH,QAAmB,EAAQ;IAC7CC,2BAAA,KAAI,EAAAN,UAAA,EAAAA,UAAA,EAAYS,MAAM,CAACJ,QAAQ,CAAC;EAClC;EAEAK,IAAIA,CAACR,KAAQ,EAAQ;IAEnB,KAAK,MAAMG,QAAQ,IAAAC,2BAAA,CAAI,IAAI,EAAAN,UAAA,EAAAA,UAAA,GAAa;MACtCK,QAAQ,CAACH,KAAK,CAAC;IACjB;EACF;AACF;AAEA,OAAO,MAAMS,MAAM,CAAC;EAIlBd,WAAWA,CAACe,IAAgB,EAAE;IAAA,KAH9BA,IAAI;IAAA,KACJC,SAAS;IAGP,IAAIC,MAAM,CAACC,8BAA8B,CAACC,YAAY,CAAC,IAAI,IAAI,EAAE;MAC/D,MAAM,IAAIC,KAAK,CACb,2BAA2BL,IAAI,+BACjC,CAAC;IACH;IAEA,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,SAAS,GAAG,IAAIjB,UAAU,CAAY,CAAC;EAC9C;EAEAsB,WAAWA,CAACC,OAAkB,EAAE;IAC9B,MAAMC,iBAAiB,GAAG;MAACC,MAAM,EAAE,IAAI,CAACT,IAAI;MAAEO;IAAO,CAAC;IACtD,MAAMG,2BAA2B,GAAGC,IAAI,CAACC,SAAS,CAACJ,iBAAiB,CAAC;IAErEN,MAAM,CAACC,8BAA8B,CAACC,YAAY,CAAC,CACjDM,2BACF,CAAC;EACH;AACF;AAAC,IAAAG,sBAAA,GAAAC,0BAAA;AAED,MAAMX,8BAA8B,CAAC;EAQnC,OAAOY,gBAAgBA,CAACC,UAAsB,EAAU;IACtD,MAAMP,MAAM,GAAG,IAAIV,MAAM,CAACiB,UAAU,CAAC;IAErCtB,2BAAA,KAAI,EAAAmB,sBAAA,EAAAA,sBAAA,EAAwBI,GAAG,CAACD,UAAU,EAAEP,MAAM,CAAC;IACnD,IAAI,CAACS,sBAAsB,CAACpB,IAAI,CAACW,MAAM,CAAC;IAExC,OAAOA,MAAM;EACf;EAGA,OAAOH,WAAWA,CAACU,UAAsB,EAAET,OAAe,EAAQ;IAChE,MAAME,MAAM,GAAGf,2BAAA,KAAI,EAAAmB,sBAAA,EAAAA,sBAAA,EAAwBM,GAAG,CAACH,UAAU,CAAC;IAC1D,IAAIP,MAAM,IAAI,IAAI,EAAE;MAClB,MAAM,IAAIJ,KAAK,CACb,6BAA6BW,UAAU,wBACzC,CAAC;IACH;IAEA,IAAI;MACF,MAAMI,aAAa,GAAGT,IAAI,CAACU,KAAK,CAACd,OAAO,CAAC;MACzCE,MAAM,CAACR,SAAS,CAACH,IAAI,CAACsB,aAAa,CAAC;IACtC,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CACX,kDAAkDR,UAAU,GAAG,EAC/DM,GACF,CAAC;IACH;EACF;AACF;AAACpC,MAAA,CAAAC,cAAA,CApCKgB,8BAA8B,EAAAU,sBAAA;EAAAxB,QAAA;EAAAC,KAAA,EACuB,IAAImC,GAAG,CAAC;AAAC;AAD9DtB,8BAA8B,CAI3BC,YAAY,GAAW,sCAAsC;AAJhED,8BAA8B,CAK3Be,sBAAsB,GAAuB,IAAIlC,UAAU,CAAS,CAAC;AAiC9EE,MAAM,CAACC,cAAc,CAACe,MAAM,EAAE,uCAAuC,EAAE;EACrEZ,KAAK,EAAEa,8BAA8B;EACrCuB,YAAY,EAAE,KAAK;EACnBC,UAAU,EAAE,KAAK;EACjBtC,QAAQ,EAAE;AACZ,CAAC,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}