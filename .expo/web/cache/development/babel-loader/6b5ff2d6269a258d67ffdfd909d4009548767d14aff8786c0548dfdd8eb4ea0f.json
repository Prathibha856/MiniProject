{"ast":null,"code":"var _jsxFileName = \"F:\\\\MiniProject\\\\node_modules\\\\react-native\\\\Libraries\\\\LogBox\\\\LogBoxInspectorContainer.js\";\nimport View from '../Components/View/View';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport * as LogBoxData from './Data/LogBoxData';\nimport LogBoxInspector from './UI/LogBoxInspector';\nimport * as React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class _LogBoxInspectorContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this._handleDismiss = () => {\n      const {\n        selectedLogIndex,\n        logs\n      } = this.props;\n      const logsArray = Array.from(logs);\n      if (selectedLogIndex != null) {\n        if (logsArray.length - 1 <= 0) {\n          LogBoxData.setSelectedLog(-1);\n        } else if (selectedLogIndex >= logsArray.length - 1) {\n          LogBoxData.setSelectedLog(selectedLogIndex - 1);\n        }\n        LogBoxData.dismiss(logsArray[selectedLogIndex]);\n      }\n    };\n    this._handleMinimize = () => {\n      LogBoxData.setSelectedLog(-1);\n    };\n    this._handleSetSelectedLog = index => {\n      LogBoxData.setSelectedLog(index);\n    };\n  }\n  render() {\n    return _jsxDEV(View, {\n      style: StyleSheet.absoluteFill,\n      children: _jsxDEV(LogBoxInspector, {\n        onDismiss: this._handleDismiss,\n        onMinimize: this._handleMinimize,\n        onChangeSelectedIndex: this._handleSetSelectedLog,\n        logs: this.props.logs,\n        selectedIndex: this.props.selectedLogIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default LogBoxData.withSubscription(_LogBoxInspectorContainer);","map":{"version":3,"names":["View","StyleSheet","LogBoxData","LogBoxInspector","React","jsxDEV","_jsxDEV","_LogBoxInspectorContainer","Component","constructor","args","_handleDismiss","selectedLogIndex","logs","props","logsArray","Array","from","length","setSelectedLog","dismiss","_handleMinimize","_handleSetSelectedLog","index","render","style","absoluteFill","children","onDismiss","onMinimize","onChangeSelectedIndex","selectedIndex","fileName","_jsxFileName","lineNumber","columnNumber","withSubscription"],"sources":["F:/MiniProject/node_modules/react-native/Libraries/LogBox/LogBoxInspectorContainer.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type LogBoxLog from './Data/LogBoxLog';\n\nimport View from '../Components/View/View';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport * as LogBoxData from './Data/LogBoxData';\nimport LogBoxInspector from './UI/LogBoxInspector';\nimport * as React from 'react';\n\ntype Props = $ReadOnly<{|\n  logs: $ReadOnlyArray<LogBoxLog>,\n  selectedLogIndex: number,\n  isDisabled?: ?boolean,\n|}>;\n\nexport class _LogBoxInspectorContainer extends React.Component<Props> {\n  render(): React.Node {\n    return (\n      <View style={StyleSheet.absoluteFill}>\n        <LogBoxInspector\n          onDismiss={this._handleDismiss}\n          onMinimize={this._handleMinimize}\n          onChangeSelectedIndex={this._handleSetSelectedLog}\n          logs={this.props.logs}\n          selectedIndex={this.props.selectedLogIndex}\n        />\n      </View>\n    );\n  }\n\n  _handleDismiss = (): void => {\n    // Here we handle the cases when the log is dismissed and it\n    // was either the last log, or when the current index\n    // is now outside the bounds of the log array.\n    const {selectedLogIndex, logs} = this.props;\n    const logsArray = Array.from(logs);\n    if (selectedLogIndex != null) {\n      if (logsArray.length - 1 <= 0) {\n        LogBoxData.setSelectedLog(-1);\n      } else if (selectedLogIndex >= logsArray.length - 1) {\n        LogBoxData.setSelectedLog(selectedLogIndex - 1);\n      }\n\n      LogBoxData.dismiss(logsArray[selectedLogIndex]);\n    }\n  };\n\n  _handleMinimize = (): void => {\n    LogBoxData.setSelectedLog(-1);\n  };\n\n  _handleSetSelectedLog = (index: number): void => {\n    LogBoxData.setSelectedLog(index);\n  };\n}\n\nexport default (LogBoxData.withSubscription(\n  _LogBoxInspectorContainer,\n): React.AbstractComponent<{||}>);\n"],"mappings":";AAYA,OAAOA,IAAI,MAAM,yBAAyB;AAC1C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAO,KAAKC,UAAU,MAAM,mBAAmB;AAC/C,OAAOC,eAAe,MAAM,sBAAsB;AAClD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ/B,OAAO,MAAMC,yBAAyB,SAASH,KAAK,CAACI,SAAS,CAAQ;EAAAC,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAepEC,cAAc,GAAG,MAAY;MAI3B,MAAM;QAACC,gBAAgB;QAAEC;MAAI,CAAC,GAAG,IAAI,CAACC,KAAK;MAC3C,MAAMC,SAAS,GAAGC,KAAK,CAACC,IAAI,CAACJ,IAAI,CAAC;MAClC,IAAID,gBAAgB,IAAI,IAAI,EAAE;QAC5B,IAAIG,SAAS,CAACG,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE;UAC7BhB,UAAU,CAACiB,cAAc,CAAC,CAAC,CAAC,CAAC;QAC/B,CAAC,MAAM,IAAIP,gBAAgB,IAAIG,SAAS,CAACG,MAAM,GAAG,CAAC,EAAE;UACnDhB,UAAU,CAACiB,cAAc,CAACP,gBAAgB,GAAG,CAAC,CAAC;QACjD;QAEAV,UAAU,CAACkB,OAAO,CAACL,SAAS,CAACH,gBAAgB,CAAC,CAAC;MACjD;IACF,CAAC;IAAA,KAEDS,eAAe,GAAG,MAAY;MAC5BnB,UAAU,CAACiB,cAAc,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC;IAAA,KAEDG,qBAAqB,GAAIC,KAAa,IAAW;MAC/CrB,UAAU,CAACiB,cAAc,CAACI,KAAK,CAAC;IAClC,CAAC;EAAA;EArCDC,MAAMA,CAAA,EAAe;IACnB,OACElB,OAAA,CAACN,IAAI;MAACyB,KAAK,EAAExB,UAAU,CAACyB,YAAa;MAAAC,QAAA,EACnCrB,OAAA,CAACH,eAAe;QACdyB,SAAS,EAAE,IAAI,CAACjB,cAAe;QAC/BkB,UAAU,EAAE,IAAI,CAACR,eAAgB;QACjCS,qBAAqB,EAAE,IAAI,CAACR,qBAAsB;QAClDT,IAAI,EAAE,IAAI,CAACC,KAAK,CAACD,IAAK;QACtBkB,aAAa,EAAE,IAAI,CAACjB,KAAK,CAACF;MAAiB;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEX;AA0BF;AAEA,eAAgBjC,UAAU,CAACkC,gBAAgB,CACzC7B,yBACF,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}