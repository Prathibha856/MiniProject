{"ast":null,"code":"var _jsxFileName = \"F:\\\\MiniProject\\\\node_modules\\\\react-native\\\\Libraries\\\\Animated\\\\createAnimatedComponent.js\";\nimport composeStyles from '../../src/private/styles/composeStyles';\nimport View from '../Components/View/View';\nimport useMergeRefs from '../Utilities/useMergeRefs';\nimport useAnimatedProps from './useAnimatedProps';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function createAnimatedComponent(Component) {\n  const AnimatedComponent = React.forwardRef((props, forwardedRef) => {\n    const [reducedProps, callbackRef] = useAnimatedProps(props);\n    const ref = useMergeRefs(callbackRef, forwardedRef);\n    const {\n      passthroughAnimatedPropExplicitValues,\n      style\n    } = reducedProps;\n    const passthroughStyle = passthroughAnimatedPropExplicitValues?.style;\n    const mergedStyle = useMemo(() => composeStyles(style, passthroughStyle), [passthroughStyle, style]);\n    return _jsxDEV(Component, Object.assign({}, reducedProps, passthroughAnimatedPropExplicitValues, {\n      style: mergedStyle,\n      ref: ref\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this);\n  });\n  AnimatedComponent.displayName = `Animated(${Component.displayName || 'Anonymous'})`;\n  return AnimatedComponent;\n}","map":{"version":3,"names":["composeStyles","View","useMergeRefs","useAnimatedProps","React","useMemo","jsxDEV","_jsxDEV","createAnimatedComponent","Component","AnimatedComponent","forwardRef","props","forwardedRef","reducedProps","callbackRef","ref","passthroughAnimatedPropExplicitValues","style","passthroughStyle","mergedStyle","Object","assign","fileName","_jsxFileName","lineNumber","columnNumber","displayName"],"sources":["F:/MiniProject/node_modules/react-native/Libraries/Animated/createAnimatedComponent.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport composeStyles from '../../src/private/styles/composeStyles';\nimport View from '../Components/View/View';\nimport useMergeRefs from '../Utilities/useMergeRefs';\nimport useAnimatedProps from './useAnimatedProps';\nimport * as React from 'react';\nimport {useMemo} from 'react';\n\nexport type AnimatedProps<Props: {...}> = {\n  // eslint-disable-next-line no-unused-vars\n  +[_K in keyof (Props &\n      $ReadOnly<{\n        passthroughAnimatedPropExplicitValues?: React.ElementConfig<\n          typeof View,\n        >,\n      }>)]: any,\n};\n\nexport type AnimatedComponentType<\n  Props: {...},\n  +Instance = mixed,\n> = React.AbstractComponent<AnimatedProps<Props>, Instance>;\n\nexport default function createAnimatedComponent<TProps: {...}, TInstance>(\n  Component: React.AbstractComponent<TProps, TInstance>,\n): AnimatedComponentType<TProps, TInstance> {\n  const AnimatedComponent = React.forwardRef<AnimatedProps<TProps>, TInstance>(\n    (props, forwardedRef) => {\n      const [reducedProps, callbackRef] = useAnimatedProps<TProps, TInstance>(\n        // $FlowFixMe[incompatible-call]\n        props,\n      );\n      const ref = useMergeRefs<TInstance>(callbackRef, forwardedRef);\n\n      // Some components require explicit passthrough values for animation\n      // to work properly. For example, if an animated component is\n      // transformed and Pressable, onPress will not work after transform\n      // without these passthrough values.\n      // $FlowFixMe[prop-missing]\n      const {passthroughAnimatedPropExplicitValues, style} = reducedProps;\n      const passthroughStyle = passthroughAnimatedPropExplicitValues?.style;\n      const mergedStyle = useMemo(\n        () => composeStyles(style, passthroughStyle),\n        [passthroughStyle, style],\n      );\n\n      // NOTE: It is important that `passthroughAnimatedPropExplicitValues` is\n      // spread after `reducedProps` but before `style`.\n      return (\n        <Component\n          {...reducedProps}\n          {...passthroughAnimatedPropExplicitValues}\n          style={mergedStyle}\n          ref={ref}\n        />\n      );\n    },\n  );\n\n  AnimatedComponent.displayName = `Animated(${\n    Component.displayName || 'Anonymous'\n  })`;\n\n  return AnimatedComponent;\n}\n"],"mappings":";AAUA,OAAOA,aAAa,MAAM,wCAAwC;AAClE,OAAOC,IAAI,MAAM,yBAAyB;AAC1C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAAQC,OAAO,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAiB9B,eAAe,SAASC,uBAAuBA,CAC7CC,SAAqD,EACX;EAC1C,MAAMC,iBAAiB,GAAGN,KAAK,CAACO,UAAU,CACxC,CAACC,KAAK,EAAEC,YAAY,KAAK;IACvB,MAAM,CAACC,YAAY,EAAEC,WAAW,CAAC,GAAGZ,gBAAgB,CAElDS,KACF,CAAC;IACD,MAAMI,GAAG,GAAGd,YAAY,CAAYa,WAAW,EAAEF,YAAY,CAAC;IAO9D,MAAM;MAACI,qCAAqC;MAAEC;IAAK,CAAC,GAAGJ,YAAY;IACnE,MAAMK,gBAAgB,GAAGF,qCAAqC,EAAEC,KAAK;IACrE,MAAME,WAAW,GAAGf,OAAO,CACzB,MAAML,aAAa,CAACkB,KAAK,EAAEC,gBAAgB,CAAC,EAC5C,CAACA,gBAAgB,EAAED,KAAK,CAC1B,CAAC;IAID,OACEX,OAAA,CAACE,SAAS,EAAAY,MAAA,CAAAC,MAAA,KACJR,YAAY,EACZG,qCAAqC;MACzCC,KAAK,EAAEE,WAAY;MACnBJ,GAAG,EAAEA;IAAI;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAEN,CACF,CAAC;EAEDhB,iBAAiB,CAACiB,WAAW,GAAG,YAC9BlB,SAAS,CAACkB,WAAW,IAAI,WAAW,GACnC;EAEH,OAAOjB,iBAAiB;AAC1B","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}