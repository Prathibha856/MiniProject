# ==========================================
# BMTC Bus Crowd Prediction System
# Environment Configuration Template
# ==========================================
# 
# Copy this file to .env and fill in the values
# cp .env.example .env
#

# ==========================================
# Application Environment
# ==========================================
APP_ENV=production
DEBUG=False
LOG_LEVEL=INFO

# ==========================================
# API Ports Configuration
# ==========================================
# Prediction API port
PREDICT_API_PORT=5000

# Fare Service API port
FARE_API_PORT=5001

# Frontend port
FRONTEND_PORT=3000

# ==========================================
# CORS Configuration
# ==========================================
# Comma-separated list of allowed origins
# For development: http://localhost:3000,http://localhost:3001
# For production: https://yourdomain.com,https://www.yourdomain.com
CORS_ORIGINS=http://localhost:3000,http://localhost:3001

# ==========================================
# Model Configuration
# ==========================================
MODEL_VERSION=v3_final
MODEL_FILENAME=crowd_prediction_model.pkl
FEATURE_INFO_FILENAME=feature_info.pkl
SCALER_FILENAME=scaler.pkl

# ==========================================
# Rush Hour Configuration
# ==========================================
# Morning rush hour (24-hour format)
MORNING_RUSH_START=7
MORNING_RUSH_END=9

# Evening rush hour (24-hour format)
EVENING_RUSH_START=17
EVENING_RUSH_END=19

# ==========================================
# Fare Structure Configuration
# ==========================================
# Distance-based fare tiers (in INR)
FARE_TIER1=5.0      # Up to 2 km
FARE_TIER2=10.0     # 2-5 km
FARE_TIER3=15.0     # 5-10 km
FARE_TIER4=20.0     # 10-15 km
FARE_TIER5=25.0     # 15+ km

# Default fallback fare
DEFAULT_FARE=10.0

# GST rate (5%)
GST_RATE=0.05

# Distance thresholds (in kilometers)
DISTANCE_TIER1=2.0
DISTANCE_TIER2=5.0
DISTANCE_TIER3=10.0
DISTANCE_TIER4=15.0

# ==========================================
# Coordinate Validation (Bangalore bounds)
# ==========================================
BANGALORE_LAT_MIN=12.7
BANGALORE_LAT_MAX=13.2
BANGALORE_LON_MIN=77.3
BANGALORE_LON_MAX=77.9

# ==========================================
# Performance Settings
# ==========================================
# Maximum batch size for batch predictions
BATCH_MAX_SIZE=100

# Prediction timeout (in seconds)
PREDICTION_TIMEOUT=5

# Average bus speed (km/h) for time estimation
AVERAGE_BUS_SPEED=20.0

# ==========================================
# Caching Configuration
# ==========================================
CACHE_ENABLED=True
CACHE_TYPE=simple
CACHE_TIMEOUT=300

# Redis configuration (if using Redis cache)
# REDIS_HOST=localhost
# REDIS_PORT=6379
# REDIS_DB=0
# REDIS_PASSWORD=

# ==========================================
# Rate Limiting
# ==========================================
RATE_LIMIT_ENABLED=False
RATE_LIMIT_DEFAULT=100 per hour
RATE_LIMIT_STORAGE_URL=memory://

# ==========================================
# Security
# ==========================================
# Secret key for Flask sessions (generate a secure random key for production)
# Example: python -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY=change-this-to-a-secure-random-key-in-production

# ==========================================
# Frontend Configuration
# ==========================================
# Backend API URLs (used by React frontend)
REACT_APP_API_URL=http://localhost:5000
REACT_APP_FARE_API_URL=http://localhost:5001

# Google Maps API Key (required for frontend maps)
REACT_APP_GOOGLE_MAPS_API_KEY=your-google-maps-api-key-here

# ==========================================
# Logging Configuration
# ==========================================
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s
LOG_MAX_BYTES=10000000    # 10MB
LOG_BACKUP_COUNT=5

# ==========================================
# Monitoring and Metrics (Optional)
# ==========================================
METRICS_ENABLED=False
METRICS_PORT=9090
TRACK_PERFORMANCE=True

# ==========================================
# Database Configuration (Future)
# ==========================================
# Uncomment and configure if migrating to database
# DATABASE_URL=postgresql://user:password@localhost:5432/bmtc
# DATABASE_POOL_SIZE=5
# DATABASE_MAX_OVERFLOW=10

# ==========================================
# Export Settings
# ==========================================
EXPORT_ENABLED=True

# ==========================================
# Data Paths
# ==========================================
# These are typically handled by Docker volumes
# Uncomment only if you need to override default paths
# TRAINING_DATA_FILENAME=training_data_v2.csv

# ==========================================
# Production Deployment Notes
# ==========================================
# 
# 1. Generate a secure SECRET_KEY:
#    python -c "import secrets; print(secrets.token_hex(32))"
#
# 2. Set APP_ENV=production and DEBUG=False
#
# 3. Update CORS_ORIGINS to your actual domain(s)
#
# 4. Get a Google Maps API key from:
#    https://developers.google.com/maps/documentation/javascript/get-api-key
#
# 5. Consider enabling rate limiting for production:
#    RATE_LIMIT_ENABLED=True
#
# 6. For production caching, consider using Redis:
#    CACHE_TYPE=redis
#    REDIS_HOST=your-redis-host
#
# 7. Mount volumes for:
#    - ./ml/models:/app/models
#    - ./ml/dataset/gtfs:/app/dataset/gtfs
#    - Logs and output directories
#
